{"version":3,"sources":["../../../src/lib/providers/kissmetrics/angulartics2-kissmetrics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAAE,YAAA,EAAa,MAAO,cAAA,CAAe;AAK5C;IAEE,iCACU,YAA0B;QADpC,iBAcC;QAbS,iBAAY,GAAZ,YAAY,CAAc;QAElC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YAClC,IAAI,GAAG,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAlC,CAAkC,CAAC,CAAC;QAEtF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,EAAvC,CAAuC,CAAC,CAAC;QAE5F,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAE5E,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACvF,CAAC;IAED,2CAAS,GAAT,UAAU,IAAY,EAAE,QAAa;QACnC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,4CAAU,GAAV,UAAW,MAAc,EAAE,UAAe;QACxC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,6CAAW,GAAX,UAAY,MAAc;QACxB,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mDAAiB,GAAjB,UAAkB,UAAe;QAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;IACjC,CAAC;IACI,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAF6F,CAE7F,CAAC;IACF,8BAAC;CAxCD,AAwCC,IAAA;SAxCY,uBAAuB","file":"angulartics2-kissmetrics.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var _kmq: any;\n\n\nexport class Angulartics2Kissmetrics {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    if (typeof (_kmq) === 'undefined') {\n      _kmq = [];\n    }\n\n    this.angulartics2.pageTrack.subscribe((x: any) => this.pageTrack(x.path, x.location));\n\n    this.angulartics2.eventTrack.subscribe((x: any) => this.eventTrack(x.action, x.properties));\n\n    this.angulartics2.setUsername.subscribe((x: string) => this.setUsername(x));\n\n    this.angulartics2.setUserProperties.subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string, location: any) {\n    _kmq.push(['record', 'Pageview', { 'Page': path }]);\n  }\n\n  eventTrack(action: string, properties: any) {\n    _kmq.push(['record', action, properties]);\n  }\n\n  setUsername(userId: string) {\n    _kmq.push(['identify', userId]);\n  }\n\n  setUserProperties(properties: any) {\n    _kmq.push(['set', properties]);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Angulartics2, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}