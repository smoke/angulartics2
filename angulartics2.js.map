{"version":3,"sources":["../../src/lib/core/angulartics2.ts"],"names":[],"mappings":"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","file":"angulartics2.js","sourceRoot":"","sourcesContent":["import { Location } from '@angular/common';\nimport { Injectable, Inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { Angulartics2Settings, DefaultConfig } from './angulartics2-config';\nimport { ANGULARTICS2_TOKEN, Angulartics2Token } from './angulartics2-token';\n\n\nexport class Angulartics2 {\n  settings: Angulartics2Settings;\n\n  pageTrack = new ReplaySubject<{ path?: string; location?: Location }>(10);\n  eventTrack = new ReplaySubject<{ action: string } | any>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<any>(10);\n\n  constructor(location: Location, router: Router,  setup: Angulartics2Token) {\n    const defaultConfig = new DefaultConfig;\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = { ...defaultConfig.pageTracking, ...setup.settings.pageTracking };\n    this.trackLocation(location, router);\n  }\n\n  trackLocation(location: Location, router: Router) {\n    router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      filter(() => !this.settings.developerMode),\n    ).subscribe((event: NavigationEnd) =>\n      this.trackUrlChange(event.urlAfterRedirects, location),\n    );\n  }\n  /** @deprecated */\n  virtualPageviews(value: boolean) {\n    this.settings.pageTracking.autoTrackVirtualPages = value;\n  }\n  /** @deprecated */\n  excludeRoutes(routes: Array<string|RegExp>) {\n    this.settings.pageTracking.excludedRoutes = routes;\n  }\n  /** @deprecated */\n  withBase(value: string) {\n    this.settings.pageTracking.basePath = value;\n  }\n  /** @deprecated */\n  clearIds(value: boolean) {\n    this.settings.pageTracking.clearIds = value;\n  }\n  /** @deprecated */\n  developerMode(value: boolean) {\n    this.settings.developerMode = value;\n  }\n\n  protected trackUrlChange(url: string, location: Location) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      this.pageTrack.next({\n        path: this.settings.pageTracking.basePath.length\n          ? this.settings.pageTracking.basePath + clearedUrl\n          : location.prepareExternalUrl(clearedUrl),\n        location: location,\n      });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(<string>excludedRoute) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds) {\n      return url\n        .split('/')\n        .filter(part => !part.match(/\\d+/))\n        .join('/');\n    }\n    return url;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Location, },\n{type: Router, },\n{type: undefined, decorators: [{ type: Inject, args: [ANGULARTICS2_TOKEN, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}