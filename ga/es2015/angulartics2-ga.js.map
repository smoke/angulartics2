{"version":3,"sources":["../../../../src/lib/providers/ga/angulartics2-ga.ts"],"names":[],"mappings":"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","file":"angulartics2-ga.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2, GoogleAnalyticsSettings } from 'angulartics2';\n\ndeclare var _gaq: GoogleAnalyticsCode;\ndeclare var ga: UniversalAnalytics.ga;\ndeclare var location: any;\n\nexport class GoogleAnalyticsDefaults implements GoogleAnalyticsSettings {\n  additionalAccountNames = [];\n  userId = null;\n  transport = '';\n}\n\n\nexport class Angulartics2GoogleAnalytics {\n\n  constructor(\n    private angulartics2: Angulartics2,\n  ) {\n    const defaults = new GoogleAnalyticsDefaults;\n    // Set the default settings for this module\n    this.angulartics2.settings.ga = { ...defaults, ...this.angulartics2.settings.ga };\n\n    this.angulartics2.pageTrack.subscribe((x: any) => this.pageTrack(x.path));\n\n    this.angulartics2.eventTrack.subscribe((x: any) => this.eventTrack(x.action, x.properties));\n\n    this.angulartics2.exceptionTrack.subscribe((x: any) => this.exceptionTrack(x));\n\n    this.angulartics2.setUsername.subscribe((x: string) => this.setUsername(x));\n\n    this.angulartics2.setUserProperties.subscribe((x: any) => this.setUserProperties(x));\n\n    this.angulartics2.userTimings.subscribe((x: any) => this.userTimings(x));\n  }\n\n  pageTrack(path: string) {\n    if (typeof _gaq !== 'undefined' && _gaq) {\n      _gaq.push(['_trackPageview', path]);\n      for (const accountName of this.angulartics2.settings.ga.additionalAccountNames) {\n        _gaq.push([accountName + '._trackPageview', path]);\n      }\n    }\n    if (typeof ga !== 'undefined' && ga) {\n      if (this.angulartics2.settings.ga.userId) {\n        ga('set', '&uid', this.angulartics2.settings.ga.userId);\n      }\n      ga('send', 'pageview', path);\n      for (const accountName of this.angulartics2.settings.ga.additionalAccountNames) {\n        ga(accountName + '.send', 'pageview', path);\n      }\n    }\n  }\n\n  /**\n   * Track Event in GA\n   *\n   * @param action Associated with the event\n   * @param properties Comprised of:\n   *  - category (string) and optional\n   *  - label (string)\n   *  - value (integer)\n   *  - noninteraction (boolean)\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGuide#SettingUpEventTracking\n   * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   */\n  eventTrack(action: string, properties: any) {\n    // Google Analytics requires an Event Category\n    if (!properties || !properties.category) {\n      properties = properties || {};\n      properties.category = 'Event';\n    }\n    // GA requires that eventValue be an integer, see:\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#eventValue\n    // https://github.com/luisfarzati/angulartics/issues/81\n    if (properties.value) {\n      const parsed = parseInt(properties.value, 10);\n      properties.value = isNaN(parsed) ? 0 : parsed;\n    }\n\n    if (typeof ga !== 'undefined') {\n      const eventOptions = {\n        eventCategory: properties.category,\n        eventAction: action,\n        eventLabel: properties.label,\n        eventValue: properties.value,\n        nonInteraction: properties.noninteraction,\n        page: properties.page || location.hash.substring(1) || location.pathname,\n        userId: this.angulartics2.settings.ga.userId,\n        hitCallback: properties.hitCallback\n      };\n\n      // add custom dimensions and metrics\n      this.setDimensionsAndMetrics(properties);\n      if (this.angulartics2.settings.ga.transport) {\n        ga('send', 'event', eventOptions, { transport: this.angulartics2.settings.ga.transport });\n      } else {\n        ga('send', 'event', eventOptions);\n      }\n\n      for (const accountName of this.angulartics2.settings.ga.additionalAccountNames) {\n        ga(accountName + '.send', 'event', eventOptions);\n      }\n    } else if (typeof _gaq !== 'undefined') {\n      _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n    }\n  }\n\n  /**\n   * Exception Track Event in GA\n   *\n   * @param properties Comprised of the optional fields:\n   *  - fatal (string)\n   *  - description (string)\n   *\n   * @https://developers.google.com/analytics/devguides/collection/analyticsjs/exceptions\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   */\n  exceptionTrack(properties: any) {\n    if (properties.fatal === undefined) {\n      console.log('No \"fatal\" provided, sending with fatal=true');\n      properties.fatal = true;\n    }\n\n    properties.exDescription = properties.description;\n\n    const eventOptions = {\n      exFatal: properties.fatal,\n      exDescription: properties.description\n    };\n\n    ga('send', 'exception', eventOptions);\n  }\n\n  /**\n   * User Timings Event in GA\n   * @name userTimings\n   *\n   * @param properties Comprised of the mandatory fields:\n   *  - timingCategory (string)\n   *  - timingVar (string)\n   *  - timingValue (number)\n   * Properties can also have the optional fields:\n   *  - timingLabel (string)\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings\n   */\n  userTimings(properties: any) {\n    if (!properties || !properties.timingCategory || !properties.timingVar || !properties.timingValue) {\n      console.error('Properties timingCategory, timingVar, and timingValue are required to be set.');\n      return;\n    }\n\n    if (ga) {\n      ga('send', 'timing', properties);\n    }\n  }\n\n  setUsername(userId: string) {\n    this.angulartics2.settings.ga.userId = userId;\n  }\n\n  setUserProperties(properties: any) {\n    this.setDimensionsAndMetrics(properties);\n  }\n\n  private setDimensionsAndMetrics(properties: any) {\n    if (!ga) {\n      return;\n    }\n    // add custom dimensions and metrics\n    for (let idx = 1; idx <= 200; idx++) {\n      if (properties['dimension' + idx.toString()]) {\n        ga('set', 'dimension' + idx.toString(), properties['dimension' + idx.toString()]);\n      } else {\n        ga('set', 'dimension' + idx.toString(), undefined);\n      }\n      if (properties['metric' + idx.toString()]) {\n        ga('set', 'metric' + idx.toString(), properties['metric' + idx.toString()]);\n      } else {\n        ga('set', 'metric' + idx.toString(), undefined);\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Angulartics2, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}