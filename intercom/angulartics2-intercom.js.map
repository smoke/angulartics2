{"version":3,"sources":["../../../src/lib/providers/intercom/angulartics2-intercom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAAE,YAAA,EAAa,MAAO,cAAA,CAAe;AAK5C;IAEE,8BACU,YAA0B;QADpC,iBAUC;QATS,iBAAY,GAAZ,YAAY,CAAc;QAElC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAlC,CAAkC,CAAC,CAAC;QAEtF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,EAAvC,CAAuC,CAAC,CAAC;QAE5F,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAErF,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAC3F,CAAC;IAED,wCAAS,GAAT,UAAU,IAAY,EAAE,QAAa;QACnC,IAAI,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;gBAC1B,GAAG,EAAE,IAAI;aACV,CAAC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;IACH,CAAC;IAED,yCAAU,GAAV,UAAW,MAAc,EAAE,UAAe;QACxC,IAAI,CAAC;YACH,QAAQ,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAC7C,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;IACH,CAAC;IAED,gDAAiB,GAAjB,UAAkB,UAAe;QAC/B,IAAI,CAAC;YACH,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC7C,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC;YACzC,CAAC;YAED,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC/B,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;IACH,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAF6F,CAE7F,CAAC;IACF,2BAAC;CAxDD,AAwDC,IAAA;SAxDY,oBAAoB","file":"angulartics2-intercom.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Intercom: any;\n\n\nexport class Angulartics2Intercom {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.pageTrack.subscribe((x: any) => this.pageTrack(x.path, x.location));\n\n    this.angulartics2.eventTrack.subscribe((x: any) => this.eventTrack(x.action, x.properties));\n\n    this.angulartics2.setUserProperties.subscribe((x: any) => this.setUserProperties(x));\n\n    this.angulartics2.setUserPropertiesOnce.subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string, location: any) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      Intercom('trackEvent', action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      if (properties.userId && !properties.user_id) {\n        properties.user_id = properties.userId;\n      }\n\n      Intercom('boot', properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Angulartics2, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}